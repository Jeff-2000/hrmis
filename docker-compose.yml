services:
  redis:
    image: redis:6
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      bash -lc "rm -rf ${PROMETHEUS_MULTIPROC_DIR:-/tmp/prometheus_mproc}/* || true &&
                gunicorn config.wsgi:application
                --bind 0.0.0.0:8000
                --workers 3 --threads 2 --timeout 60"
    volumes:
      - .:/code
      - prometheus_multiproc:${PROMETHEUS_MULTIPROC_DIR:-/tmp/prometheus_mproc}
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    env_file: 
      - ./config/.env
    environment:
      # DB / broker (Render Postgres)
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      # Prometheus multiprocess for Gunicorn
      PROMETHEUS_MULTIPROC_DIR: /tmp/prometheus_mproc
      DJANGO_SETTINGS_MODULE: config.settings
      ENVIRONMENT: production

  worker:
    build: .
    command: bash -lc "CELERY_METRICS_PORT=9100 celery -A config worker --loglevel=INFO"
    depends_on:
      - web
      - redis
    env_file: ./config/.env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DJANGO_SETTINGS_MODULE: config.settings
      ENVIRONMENT: production
      CELERY_METRICS_PORT: "9100"
    expose:
      - "9100"

  beat:
    build: .
    command: bash -lc "CELERY_METRICS_PORT=9101 celery -A config beat --loglevel=INFO -s /tmp/celerybeat-schedule"
    depends_on:
      - web
      - redis
    env_file: 
      - ./config/.env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DJANGO_SETTINGS_MODULE: config.settings
      ENVIRONMENT: production
      CELERY_METRICS_PORT: "9101"
    expose:
      - "9101"

  prometheus:
    image: prom/prometheus:latest
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=15d"
    volumes:
      - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - web
      - worker
      - beat

  grafana:
    image: grafana/grafana-oss:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/static:ro
    depends_on:
      - web

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
  prometheus_multiproc: